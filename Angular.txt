html
attributes e.g name=value
this is a line break <p>This is<br>a paragraph<br>with line breaks.</p>
<!-- This is a comment -->
href for links
tr is for tables
The <div> element is often used as a container for other HTML elements.
The <div> element has no required attributes, but style, class and id are common.
The <span> element is often used as a container for some text.
The HTML class attribute is used to define equal styles for elements with the same class name.
The <select> element defines a drop-down list:
<input type="text"> defines a one-line text input field:

ANGULAR
AngularJS is a JavaScript framework. It is a library written in JavaScript.
AngularJS is distributed as a JavaScript file, and can be added to a web page with a script tag:
AngularJS extends HTML with ng-directives.
The ng-app directive defines an AngularJS application.
The ng-model directive binds the value of HTML controls (input, select, textarea) to application data.
The ng-bind directive binds application data to the HTML view.
The ng-init directive initializes AngularJS application variables.
AngularJS modules define AngularJS applications.
AngularJS controllers control AngularJS applications.
The ng-app directive defines the application, the ng-controller directive defines the controller.
AngularJS binds data to HTML using Expressions.{{expressions}} or ng-bind="expression"
AngularJS expressions are much like JavaScript expressions: They can contain literals, operators, and variables.
AngularJS expressions can be written inside double braces: {{ expression }}.
AngularJS expressions can also be written inside a directive: ng-bind="expression".
AngularJS will resolve the expression, and return the result exactly where the expression is written.
AngularJS expressions are much like JavaScript expressions: They can contain literals, operators, and variables.
Example {{ 5 + 5 }} or {{ firstName + " " + lastName }}
E,g
<div ng-app="" ng-init="myCol='lightblue'">

<input style="background-color:{{myCol}}" ng-model="myCol">

</div>
An AngularJS module defines an application.
The module is a container for the different parts of an application.
The module is a container for the application controllers.
Controllers always belong to a module.
e.g var app = angular.module("myApp", []); 
AngularJS lets you extend HTML with new attributes called Directives.
AngularJS has a set of built-in directives which offers functionality to your applications.
AngularJS also lets you define your own directives.
AngularJS directives are extended HTML attributes with the prefix ng-.
The ng-app directive initializes an AngularJS application.
The ng-init directive initializes application data.
The ng-model directive binds the value of HTML controls (input, select, textarea) to application data.
Read about all AngularJS directives in our AngularJS directive reference.
The ng-init directive defines initial values for an AngularJS application.
The ng-model directive binds the value of HTML controls (input, select, textarea) to application data.
The ng-model directive can also:
•	Provide type validation for application data (number, email, required).
•	Provide status for application data (invalid, dirty, touched, error).
•	Provide CSS classes for HTML elements.
•	Bind HTML elements to HTML forms.
The ng-model directive binds the value of HTML controls (input, select, textarea) to application data.
You can use the ng-bind directive, which will bind the innerHTML of the element to the specified model property:
Use the ng-model directive to bind data from the model to the view on HTML controls (input, select, textarea).
Data binding in AngularJS is the synchronization between the model and the view.

The scope is the binding part between the HTML (view) and the JavaScript (controller).
AngularJS provides filters to transform data:
•	currency Format a number to a currency format.
•	date Format a date to a specified format.
•	filter Select a subset of items from an array.
•	json Format an object to a JSON string.
•	limitTo Limits an array/string, into a specified number of elements/characters.
•	lowercase Format a string to lower case.
•	number Format a number to a string.
•	orderBy Orders an array by an expression.
•	uppercase Format a string to upper case.
________________________________________
Adding Filters to Expressions
Filters can be added to expressions by using the pipe character |, followed by a filter.
The uppercase filter format strings to upper case:

In AngularJS, a service is a function, or object, that is available for, and limited to, your AngularJS application.
AngularJS has about 30 built-in services. One of them is the $location service.
The $location service has methods which return information about the location of the current web page:
The $http service is one of the most common used services in AngularJS applications. The service makes a request to the server, and lets your application handle the response.
Methods
The example above uses the .get method of the $http service.
The .get method is a shortcut method of the $http service. There are several shortcut methods:
•	.delete()
•	.get()
•	.head()
•	.jsonp()
•	.patch()
•	.post()
•	.put()
The methods above are all shortcuts of calling the $http service:
Properties
The response from the server is an object with these properties:
•	.config the object used to generate the request.
•	.data a string, or an object, carrying the response from the server.
•	.headers a function to use to get header information.
•	.status a number defining the HTTP status.
•	.statusText a string defining the HTTP status.
Dropdowns made with ng-options allows the selected value to be an object, while dropdowns made from ng-repeat has to be a string.
AngularJS has directives for binding application data to the attributes of HTML DOM elements.
________________________________________The ng-disabled Directive
The ng-disabled directive binds AngularJS application data to the disabled attribute of HTML elements.
The ng-show Directive
The ng-show directive shows or hides an HTML element.
Toggle, True/False
ng-show="showMe"
The AngularJS Global API is a set of global JavaScript functions for performing common tasks like:
•	Comparing objects
•	Iterating objects
•	Converting data
API	Description
angular.lowercase()	Converts a string to lowercase
angular.uppercase()	Converts a string to uppercase
angular.isString()	Returns true if the reference is a string
angular.isNumber()	Returns true if the reference is a number

The placeholder attribute specifies a short hint that describes the expected value of an input field.
Methods
ngOnInit() 
A callback method that is invoked immediately after the default change detector has checked the directive's data-bound properties for the first time, and before any of the view or content children have been checked. It is invoked only once when the directive is instantiated.

